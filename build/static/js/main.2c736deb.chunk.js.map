{"version":3,"sources":["config.js","helpers/shortkeyHandler.js","redux/actions/input.js","redux/actionTypes.js","redux/actions/preset.js","components/SelectPortInput.js","redux/actions/connection.js","helpers/isJson.js","components/PresetInput.js","components/SerialInput.js","redux/actions/recent.js","components/SerialOutput.js","components/RecentInput.js","components/LogOutput.js","components/AddPresetModal.js","components/EditPresetModal.js","components/Presetting.js","App.js","serviceWorker.js","redux/reducers/recent.js","redux/reducers/input.js","redux/reducers/preset.js","redux/reducers/connection.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["host","window","location","hostname","shortkeyHandler","this","events","document","body","addEventListener","_key","key","_metaKey","metaKey","_shiftKey","shiftKey","Object","keys","forEach","topic","condition","callback","call","name","setSerialInputText","type","payload","inputText","fetchPreset","dispatch","a","axios","get","config","catch","then","data","map","id","header","results","sortBy","baudRates","connect","connection","setConnection","flag","useState","ports","setPorts","port","setPort","baudRate","setBaudRate","useForm","register","getValues","onConnect","post","response","alert","JSON","stringify","onDisconnect","useEffect","status","_port","_baudRate","e","console","log","addEvent","Form","FormGroup","row","Label","sm","className","Col","Input","value","innerRef","required","Button","color","onClick","isJson","str","result","parse","prototype","toString","err","presets","preset","onChange","style","width","target","index","input","serialInputText","addRecent","setInputText","watch","setValue","undefined","error","setError","onFormat","onSubmit","preventDefault","disabled","height","socket","socketio","text","setText","autoClear","setAutoClear","res","setResponse","on","useSocketIOTopic","useMemo","lineHeight","check","checked","recentList","recent","delRecentAll","slice","SerialOutput","level","setLevel","setTopic","meta","addPreset","open","close","triggerValidation","errors","Modal","isOpen","toggle","size","ModalHeader","ModalBody","title","presetData","validate","v","presetText","ModalFooter","deletePreset","Table","responsive","scope","modal","setModal","editModal","setEditModal","numOfInput","setNumOfInput","Row","xs","padding","Array","_","fontSize","LogOutput","Boolean","match","initialState","localStorage","getItem","initState","combineReducers","state","action","newRecentList","setItem","removeItem","applyMiddleware","reduxThunk","createStore","rootReducer","ReactDOM","render","store","bottom","right","pkg","version","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c736deb.chunk.js","sourcesContent":["export default {\n  host: window.location.hostname,\n}\n","class ShortkeyHandler {\n  constructor() {\n    this.events = {}\n    document.body.addEventListener('keydown', ({key: _key, metaKey: _metaKey, shiftKey: _shiftKey}) => {\n      Object.keys(this.events).forEach(topic => {\n        const {metaKey, shiftKey, key} = this.events[topic].condition\n        if (metaKey === _metaKey && shiftKey === _shiftKey && key === _key) {\n          this.events[topic].callback.call()\n        }\n      })\n    })\n  }\n\n  addEvent(name, {metaKey, shiftKey, key}, callback) {\n    if (!this.events[name]) {\n      this.events[name] = {condition: {metaKey, shiftKey, key}, callback}\n    }\n  }\n}\n\nconst shortkeyHandler = new ShortkeyHandler()\nexport default shortkeyHandler\n","import {SET_SERIAL_INPUT_TEXT} from '../actionTypes'\n\nexport const setSerialInputText = ({inputText}) => ({\n  type: SET_SERIAL_INPUT_TEXT,\n  payload: {\n    inputText\n  }\n})\n","export const ADD_RECENT = 'ADD_RECENT'\nexport const DELETE_RECENT = 'DELETE_RECENT'\n\nexport const SET_SERIAL_INPUT_TEXT = 'SET_SERIAL_INPUT_TEXT'\n\nexport const ADD_PRESET = 'ADD_PRESET'\nexport const DELETE_PRESET = 'DELETE_PRESET'\nexport const EDIT_PRESET = 'EDIT_PRESET'\nexport const SET_PRESET = 'FETCH_PRESET'\n\nexport const SET_CONNECTION = 'SET_CONNECTION'\n","import {sortBy} from 'lodash'\nimport {DELETE_PRESET, SET_PRESET} from '../actionTypes'\nimport axios from 'axios'\nimport config from '../../config'\n\nexport const addPreset = ({header, data}) => (dispatch) => {\n  axios.post(`http://${config.host}:4002/saves`, {header, data})\n    .catch(() => [])\n    .then(() => dispatch(fetchPreset()))\n\n  dispatch(fetchPreset())\n}\n\nexport const deletePreset = (id) => async (dispatch) => {\n  await axios.post(`http://${config.host}:4002/saves/deletes`, {id})\n    .catch(() => [])\n\n  dispatch(fetchPreset())\n  dispatch({\n    type: DELETE_PRESET,\n    payload: {}\n  })\n}\n\nexport const fetchPreset = () => async (dispatch) => {\n  const results = await axios.get(`http://${config.host}:4002/saves`)\n    .catch(() => [])\n    .then(({data}) => data.map(({id, header, data}) => ({id, header, data})))\n\n  dispatch({\n    type: SET_PRESET,\n    payload: sortBy(results, 'header'),\n  })\n}\n","import axios from 'axios'\nimport {connect} from 'react-redux'\nimport {Button, Col, Form, FormGroup, Input, Label} from 'reactstrap'\nimport React, {useEffect, useState} from 'react'\nimport useForm from 'react-hook-form'\nimport config from '../config'\nimport shortkeyHandler from '../helpers/shortkeyHandler'\nimport {setConnection} from '../redux/actions'\n\nconst baudRates = [\n  345600,\n  115200,\n  56700,\n  19200,\n  9600,\n]\n\nconst SelectPortInput = ({connection, setConnection}) => {\n  const [ports, setPorts] = useState([])\n  const [port, setPort] = useState()\n  const [baudRate, setBaudRate] = useState()\n  const {register, getValues} = useForm()\n\n  const onConnect = async () => {\n    try {\n      const {port, baudRate} = getValues()\n      await axios.post(`http://${config.host}:4002/connect`, {port, baudRate})\n      setConnection(true)\n    } catch ({response}) {\n      alert(JSON.stringify(response.data))\n    }\n  }\n\n  const onDisconnect = async () => {\n    try {\n      await axios.post(`http://${config.host}:4002/disconnect`)\n      setConnection(false)\n    } catch ({response}) {\n      alert(JSON.stringify(response.data))\n    }\n  }\n\n  useEffect(() => {\n    axios.get(`http://${config.host}:4002/list`).then(({data}) => setPorts(data))\n    axios.get(`http://${config.host}:4002/info`).then(({data}) => {\n      if (data.status === 'connected') {\n        const {port: _port, baudRate: _baudRate} = data.data\n        setPort(_port)\n        setBaudRate(_baudRate)\n        setConnection(true)\n      }\n      else setConnection(false)\n    }).catch(e => console.log({e}))\n\n    shortkeyHandler.addEvent('connect', {metaKey: true, shiftKey: true, key: 's'}, () => onConnect())\n    shortkeyHandler.addEvent('disconnect', {metaKey: true, shiftKey: true, key: 'x'}, () => onDisconnect())\n    // eslint-disable-next-line\n  }, [])\n\n  return <Form>\n    <FormGroup row>\n      <Label sm={1}>\n        <span className=\"font-weight-bolder\">Port: </span>\n      </Label>\n      <Col sm={7}>\n        <Input type=\"select\" name=\"port\" value={port} innerRef={register({required: true})}>\n          <option value={'/dev/ROBOT'} key={'robot'}>/dev/ROBOT</option>\n          {\n            ports.map(port => <option value={port} key={port}>{port}</option>)\n          }\n        </Input>\n      </Col>\n      <Col sm={2}>\n        <Input type=\"select\" name=\"baudRate\" value={baudRate} innerRef={register({required: true})}>\n          {baudRates.map(baudRate => <option key={baudRate} value={baudRate}>{baudRate}</option>)}\n        </Input>\n      </Col>\n      <Col sm={2}>\n        {\n          connection\n            ? <Button type=\"button\" color=\"danger\" className=\"form-control\" onClick={onDisconnect}>Close</Button>\n            : <Button type=\"button\" color=\"success\" className=\"form-control\" onClick={onConnect}>Connect</Button>\n        }\n      </Col>\n    </FormGroup>\n  </Form>\n}\n\nconst mapStateToProps = ({connection}) => {\n  return {\n    connection: connection.connection\n  }\n}\n\nexport default connect(mapStateToProps, {setConnection})(SelectPortInput)\n","import {SET_CONNECTION} from '../actionTypes'\n\nexport const setConnection = (flag) => ({\n  type: SET_CONNECTION,\n  payload: flag\n})\n","export default function isJson(str) {\n  if (typeof str !== 'string') return false;\n  try {\n    const result = JSON.parse(str);\n    const type = Object.prototype.toString.call(result);\n    return type === '[object Object]'\n      || type === '[object Array]';\n  } catch (err) {\n    return false;\n  }\n}\n","import React, {useEffect} from 'react'\nimport {Input} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {fetchPreset, setSerialInputText} from '../redux/actions'\n\nconst PresetInput = ({presets, fetchPreset, onChange = () => null}) => {\n  useEffect(() => {\n    fetchPreset()\n  }, [])\n\n  return (\n    <Input type=\"select\" style={{width: '20ch'}} onChange={({target}) => target.value !== -1 && onChange({inputText: presets[target.value].data})}>\n      {presets.map(({header, data}, index) => <option key={index} value={index}>{header}</option>)}\n    </Input>\n  )\n}\n\nconst mapStateToProps = ({preset}) => {\n  const {presets} = preset\n  return {presets}\n}\n\nexport default connect(mapStateToProps, {setSerialInputText, fetchPreset})(PresetInput)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {Button, Form, FormGroup, Input} from 'reactstrap'\nimport useForm from 'react-hook-form'\nimport isJson from '../helpers/isJson'\nimport axios from 'axios'\nimport config from '../config'\nimport shortkeyHandler from '../helpers/shortkeyHandler'\n\nimport {addRecent} from '../redux/actions'\nimport PresetInput from './PresetInput'\n\nconst SerialInput = ({connection, addRecent}) => {\n  const [inputText, setInputText] = useState()\n  const {register, watch, setValue} = useForm()\n  const [error, setError] = useState(undefined)\n\n  useEffect(() => {\n    setValue('jsonText', JSON.stringify(inputText, null, 2))\n    // eslint-disable-next-line\n  }, [inputText])\n\n  const onFormat = () => {\n    setError(undefined)\n    const str = watch('jsonText')\n    if (isJson(str)) {\n      setValue('jsonText', JSON.stringify(JSON.parse(str), null, 2))\n    }\n    else {\n      setError('Json format is invalid')\n    }\n  }\n\n  const onSubmit = async (e) => {\n    if (e) {\n      e.preventDefault()\n    }\n\n    if (!isJson(watch('jsonText'))) {\n      alert('JsonText is invalid')\n      return\n    }\n\n    try {\n      await axios.post(`http://${config.host}:4002/commit`, {\n        data: JSON.parse(watch('jsonText'))\n      })\n\n      const data = JSON.stringify(JSON.parse(watch('jsonText')))\n      addRecent({data})\n\n    } catch ({response}) {\n      alert(JSON.stringify(response))\n    }\n  }\n\n  shortkeyHandler.addEvent('commit', {metaKey: true, shiftKey: true, key: 'Enter'}, () => onSubmit())\n  shortkeyHandler.addEvent('format', {metaKey: true, shiftKey: true, key: 'l'}, () => onFormat())\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <FormGroup>\n        <div className=\"textarea-container\">\n          <Input type=\"textarea\" name=\"jsonText\" disabled={!connection} style={{height: '30vh'}} innerRef={register({required: true})}/>\n          <div className=\"textarea-container corner-button\">\n            <span style={{color: 'red'}}> {error}</span>\n\n            {\n              connection && <PresetInput onChange={({inputText}) => setInputText(inputText)}/>\n            }\n\n            <Button type=\"button\" color=\"primary\" className=\"mb-1 btn-sm\" onClick={onFormat}>Format</Button>\n\n            {\n              isJson(watch('jsonText')) && <Button type=\"submit\" color=\"success\" className=\"mb-1 btn-sm\">Commit</Button>\n            }\n\n          </div>\n        </div>\n      </FormGroup>\n    </Form>\n  )\n}\n\nconst mapStateToProps = ({input, connection}) => {\n  const {serialInputText} = input\n  return {\n    serialInputText,\n    connection: connection.connection\n  }\n}\n\nexport default connect(mapStateToProps, {addRecent})(SerialInput)\n","import {ADD_RECENT, DELETE_RECENT} from '../actionTypes'\n\nexport const addRecent = ({data}) => ({\n  type: ADD_RECENT,\n  payload: {data}\n})\n\nexport const delRecentAll = () => ({\n  type: DELETE_RECENT,\n  payload: {}\n})\n","import React, {useEffect, useMemo, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {Button, FormGroup, Input, Label} from 'reactstrap'\nimport config from '../config'\nimport socketio from 'socket.io-client'\nimport shortkeyHandler from '../helpers/shortkeyHandler'\n\nconst socket = socketio(`http://${config.host}:4002`)\n\nconst useSocketIOTopic = (topic) => {\n  const [response, setResponse] = useState(undefined)\n\n  useEffect(() => {\n    socket.on(topic, (data) => {\n      setResponse(data)\n    })\n  }, [topic])\n\n  return response\n}\n\nconst SerialOutput = ({connection}) => {\n  const [text, setText] = useState(``)\n  const [autoClear, setAutoClear] = useState(false)\n  const res = useSocketIOTopic('listening')\n  useEffect(() => {\n    shortkeyHandler.addEvent('clearText', {metaKey: true, shiftKey: true, key: 'k'}, () => setText(``))\n  }, [])\n  useMemo(() => {\n    if (res) {\n      const {type, data} = res\n      if (type === 'json') {\n        if (autoClear) {\n          return setText(`${JSON.stringify(data, null, 2)}\\r\\n`)\n        }\n\n        setText(`${text}${JSON.stringify(data, null, 2)}\\r\\n`)\n      } else {\n        if (autoClear) {\n          return setText(`${data}\\r\\n`)\n        }\n        setText(`${text}${data}\\r\\n`)\n      }\n    }\n    // eslint-disable-next-line\n  }, [res, autoClear])\n\n  return (\n    <FormGroup className=\"m-0 p-0\">\n      <div className=\"textarea-container\">\n      <Input type=\"textarea\" disabled={!connection} value={text} style={{height: '45vh', lineHeight: 1.2}}/>\n        <div className=\"textarea-container corner-button\">\n          <Label check>\n            <Input type=\"checkbox\" checked={autoClear} onChange={({target}) => setAutoClear(target.checked)}/>{' '}\n            Auto-Clear\n          </Label>\n          <Button type=\"button\" color=\"primary\" className=\"ml-3 btn-sm\" onClick={() => setText(``)}>Clear</Button>\n        </div>\n      </div>\n    </FormGroup>\n  )\n}\n\nconst mapStateToProps = ({connection}) => {\n  return  {\n    connection: connection.connection\n  }\n}\n\nexport default connect(mapStateToProps)(SerialOutput)\n","import React from 'react'\nimport {Col, Input} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {delRecentAll, setSerialInputText} from '../redux/actions'\n\nconst RecentInput = ({recentList, setSerialInputText}) => {\n  return (\n    <div className=\"d-flex justify-content-start\">\n      <span className=\"font-weight-bolder mr-3\">Recent: </span>\n      <Input type=\"select\" onChange={({target}) => target.value !== -1 && setSerialInputText({inputText: JSON.parse(recentList[target.value])})}>\n        {recentList.map((recent, index) => <option key={index} value={index}>{recent.slice(0, 100)}</option>)}\n      </Input>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({recent}) => {\n  const {recentList} = recent\n  return {\n    recentList\n  }\n}\nexport default connect(mapStateToProps, {delRecentAll, setSerialInputText})(RecentInput)\n","import React, {useEffect, useMemo, useState} from 'react'\nimport {Col, FormGroup, Input, Row} from 'reactstrap'\nimport config from '../config'\nimport socketio from 'socket.io-client'\nimport shortkeyHandler from '../helpers/shortkeyHandler'\n\nconst socket = socketio(`http://${config.host}:4002`)\n\nconst useSocketIOTopic = (topic) => {\n  const [response, setResponse] = useState(undefined)\n\n  useEffect(() => {\n    socket.on(topic, (data) => {\n      setResponse(data)\n    })\n  }, [topic])\n\n  return response\n}\n\nconst SerialOutput = ({connection}) => {\n  const [text, setText] = useState(``)\n  const [level, setLevel] = useState('all')\n  const [topic, setTopic] = useState('')\n  const [autoClear] = useState(false)\n  const res = useSocketIOTopic('log')\n  useEffect(() => {\n    shortkeyHandler.addEvent('clearLogText', {metaKey: true, shiftKey: true, key: 'k'}, () => setText(``))\n  }, [])\n  useMemo(() => {\n    if (res) {\n      const {data, meta} = res\n      if (level !== 'all' && meta.level !== level)\n        return\n\n      if (topic !== '' && meta.topic !== topic)\n        return\n\n      if (autoClear) {\n        return setText(`${data}\\r\\n`)\n      }\n      setText(`${text}${data}\\r\\n`)\n    }\n    // eslint-disable-next-line\n  }, [res, autoClear])\n\n  return (\n\n    <div className=\"w-100\">\n      <div className=\"textarea-container\">\n        <Input type=\"textarea\" disabled={!connection} value={text} style={{height: '45vh', lineHeight: 1.2}}/>\n        <div className=\"corner-button\">\n          <Input type=\"select\"\n                 className=\"form-control\" value={level}\n                 onChange={({target}) => {\n                   setLevel(target.value)\n                   setText('')\n                 }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"fatal\">Fatal</option>\n            <option value=\"error\">Error</option>\n            <option value=\"warning\">Warning</option>\n            <option value=\"info\">Info</option>\n            <option value=\"debug\">Debug</option>\n            <option value=\"trace\">Trace</option>\n          </Input>\n          <Input type=\"text\" className=\"form-control\" value={topic} onChange={({target}) => {\n            setText('')\n            setTopic(target.value)\n          }}/>\n        </div>\n      </div>\n\n    </div>\n\n  )\n}\n\nexport default SerialOutput\n","import React from 'react'\nimport useForm from 'react-hook-form'\nimport {connect} from 'react-redux'\nimport {addPreset} from '../redux/actions'\nimport {Button, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap'\nimport isJson from '../helpers/isJson'\n\nconst AddPresetModal = ({open = false, close = () => null, addPreset}) => {\n  const {register, getValues, triggerValidation, errors, watch, setValue} = useForm()\n  return (\n    <Modal isOpen={open} toggle={close} size=\"lg\">\n      <ModalHeader toggle={close}>\n        Add Preset\n      </ModalHeader>\n      <ModalBody>\n        <Label><strong>Title</strong> {errors.title && <p style={{color: 'red'}}>title is required.</p>}</Label>\n        <Input name=\"title\" type=\"text\" size=\"lg\" innerRef={register({required: true})}/>\n\n        <Label><strong>Preset data</strong>\n          {errors.presetData && errors.presetData.type === 'required' && <p style={{color: 'red'}}>preset is required.</p>}\n          {errors.presetData && errors.presetData.type === 'validate' && <p style={{color: 'red'}}>preset must be json format.</p>}\n        </Label>\n        <Input name=\"presetData\" type=\"textarea\" size=\"lg\" style={{height: '40vh'}} innerRef={register({\n          required: true,\n          validate: v => isJson(v)\n        })}/>\n\n        <div className=\"w-100 text-right m-2\">\n          {isJson(watch('presetData')) && <Button type=\"button\" color=\"primary\" size=\"lg\" onClick={() => {\n            const presetText = watch('presetData')\n            setValue('presetData', JSON.stringify(JSON.parse(presetText), null, 2))\n          }}>Format</Button>}\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <div className=\"w-100 text-right\">\n          <Button type=\"button\" color=\"danger\" size=\"lg\" onClick={close}>Discard</Button>\n          <Button className=\"ml-2\" type=\"button\" color=\"success\" size=\"lg\" onClick={async () => {\n            const isValid = await triggerValidation()\n            if (!isValid) {\n              return null\n            }\n            const {title, presetData} = getValues()\n            addPreset({header: title, data: JSON.parse(presetData)})\n            close()\n          }}>Add Preset</Button>\n        </div>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default connect(null, {addPreset})(AddPresetModal)\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {fetchPreset, deletePreset} from '../redux/actions'\nimport {Button, Modal, ModalBody, ModalHeader, Table} from 'reactstrap'\n\nconst EditPresetModal = ({open = false, close = () => null, presets, fetchPreset, deletePreset}) => {\n  useEffect(() => {\n    fetchPreset()\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <Modal isOpen={open} toggle={close} size=\"lg\">\n      <ModalHeader toggle={close}>\n        Edit Preset\n      </ModalHeader>\n      <ModalBody>\n        <Table responsive>\n          <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Data</th>\n            <th>OP</th>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            presets.map(({id, header, data}) => (\n              <tr key={id}>\n                <th scope=\"row\">{id}</th>\n                <td>{header}</td>\n                <td>{JSON.stringify(data).slice(0, 50)}</td>\n                <td>\n                  <Button type=\"button\" color=\"danger\" size=\"sm\" style={{width: 60}} onClick={() => deletePreset(id)}>Delete</Button>\n                  <Button type=\"button\" color=\"primary\" size=\"sm\" style={{width: 60}} className=\"ml-1\">Edit</Button>\n                </td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </Table>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default connect(({preset}) => ({\n  presets: preset.presets\n}), {fetchPreset, deletePreset})(EditPresetModal)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {fetchPreset, setSerialInputText} from '../redux/actions'\nimport {Button} from 'reactstrap'\n\nimport AddPresetModal from './AddPresetModal'\nimport EditPresetModal from './EditPresetModal'\n\nconst PreSetting = ({fetchPreset}) => {\n  const [modal, setModal] = useState(false)\n  const [editModal, setEditModal] = useState(false)\n  useEffect(() => {\n    fetchPreset()\n  }, [])\n\n  return (\n    <div>\n      <AddPresetModal close={() => setModal(false)} open={modal}/>\n      <EditPresetModal close={() => setEditModal(false)} open={editModal}/>\n      <Button className=\"mr-1\" type=\"button\" color=\"primary\" onClick={() => setEditModal(true)}>Edit</Button>\n      <Button className=\"ml-1\" type=\"button\" color=\"success\" onClick={() => setModal(true)}>Add</Button>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({preset}) => {\n  const {presets} = preset\n  return {presets}\n}\nexport default connect(mapStateToProps, {setSerialInputText, fetchPreset})(PreSetting)\n","import React, {Fragment, useState} from 'react'\nimport {connect} from 'react-redux'\nimport {Col, Row} from 'reactstrap'\n\nimport SelectPortInput from './components/SelectPortInput'\nimport SerialInput from './components/SerialInput'\nimport SerialOutput from './components/SerialOutput'\nimport RecentInput from './components/RecentInput'\nimport LogOutput from './components/LogOutput'\nimport PreSetting from './components/Presetting'\n\nimport './helpers/shortkeyHandler'\n\nfunction App({connection}) {\n  const [numOfInput, setNumOfInput] = useState(1)\n  return (\n    <Fragment>\n      <div className=\"ml-3 mr-3 mt-3\">\n        <Row>\n          <Col xs=\"5\">\n            <SelectPortInput/>\n          </Col>\n          <Col xs=\"7\">\n            <Row>\n              <Col xs={8}>\n                {connection && <RecentInput/>}\n              </Col>\n              <Col xs={4}>\n                <PreSetting/>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"5\" style={{padding: 1}}>\n            {\n              [...Array(numOfInput)].map((_, index) => {\n                return <SerialInput key={index}/>\n              })\n            }\n            <div className=\"d-flex justify-content-end\">\n              <button type=\"button\" className=\"btn btn-primary btn-circle btn-md m-1 p-0\" onClick={() => setNumOfInput(numOfInput + 1)}>\n                <span style={{fontSize: '1.5rem'}}>+</span>\n              </button>\n              {\n                numOfInput > 0 && <button type=\"button\" className=\"btn btn-danger btn-circle btn-md m-1  p-0\" onClick={() => setNumOfInput(numOfInput <= 0 ? 0 : numOfInput - 1)}>\n                  <span style={{fontSize: '1.5rem'}}>-</span>\n                </button>\n              }\n            </div>\n          </Col>\n          <Col xs=\"7\" style={{padding: 1}}>\n            <SerialOutput/>\n            <LogOutput/>\n          </Col>\n        </Row>\n      </div>\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = ({input, connection}) => {\n  const {serialInputText} = input\n  return {\n    serialInputText,\n    connection: connection.connection\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_RECENT, DELETE_RECENT } from \"../actionTypes\";\n\nconst initialState = {\n  recentList: JSON.parse(localStorage.getItem('recent')) || []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_RECENT: {\n      const {data} = action.payload\n      const newRecentList = [...state.recentList, data]\n      localStorage.setItem('recent', JSON.stringify(newRecentList))\n      return {\n        ...state,\n        recentList: newRecentList\n      };\n    }\n    case DELETE_RECENT: {\n      localStorage.removeItem('recent')\n      return {\n        ...state,\n        recentList: []\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {SET_SERIAL_INPUT_TEXT} from '../actionTypes'\n\nconst initState = {\n  serialInputText: 'test'\n}\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case SET_SERIAL_INPUT_TEXT: {\n      const {inputText} = action.payload\n      return {...state, serialInputText: inputText}\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import {ADD_PRESET, DELETE_PRESET, SET_PRESET} from '../actionTypes'\n\nconst initialState = {\n  presets: []\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PRESET: {\n      return {...state, presets: action.payload || []}\n    }\n    case ADD_PRESET: {\n      return {...state}\n    }\n    case DELETE_PRESET: {\n      return {...state}\n    }\n    default:\n      return state\n  }\n}\n","import {SET_CONNECTION} from '../actionTypes'\n\nconst initState = {\n  connection: false\n}\n\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case SET_CONNECTION: {\n      return {...state, connection: action.payload}\n    }\n    default: {\n      return state\n    }\n  }\n}\n","import {combineReducers} from 'redux'\nimport recent from './recent'\nimport input from './input'\nimport preset from './preset'\nimport connection from './connection'\n\nexport default combineReducers({recent, input, preset, connection})\n","import { createStore, applyMiddleware } from \"redux\";\nimport reduxThunk from 'redux-thunk'\nimport rootReducer from \"./reducers\";\n\nexport default applyMiddleware(reduxThunk)(createStore)(rootReducer);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './assets/css/common.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker'\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\nimport pkg from '../package.json'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n    <span className=\"position-relative\" style={{bottom: 0, right: 0}}>\n        version: {pkg.version}\n      </span>\n  </Provider>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}