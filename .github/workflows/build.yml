on:
  push:
    branches:
      - main
jobs:
  build_docker:
    name: Build Docker image for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux-armv6
            dockerfile: rpizw.Dockerfile
          - os: linux-armv7
            dockerfile: rpi3.Dockerfile

    steps:
      - uses: actions/checkout@v3
      - name: Verify Changed files
        uses: tj-actions/changed-files@v35
        id: verify-changed-files
        with:
          since_last_remote_commit: true
          files: ${{ matrix.dockerfile }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/arm/v6,linux/arm/v7

      - name: Log in to Docker Hub
#        if: steps.verify-changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
#        if: steps.verify-changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sg-mcu-com-${{ matrix.os }}:latest
  build_released_binary:
    needs: build_docker
    name: Create binary release for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux-armv6
            platform: linux/amd64
          - os: linux-armv7
            platform: linux/amd64
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/arm/v6,linux/arm/v7

      - name: Run Docker image
        run: docker run --platform=${{ matrix.platform }} --rm -v $(pwd):/app -w /app ${{ secrets.DOCKERHUB_USERNAME }}/sg-mcu-com-${{ matrix.os }}:latest
      - name: Archive Code
        run: zip -r app.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-${{matrix.os}}
          path: app.zip
  github_release:
    needs: build_released_binary
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.job_output.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Output
        id: job_output
        run: echo "tag=${{ steps.tag_version.outputs.new_tag }}" >> "$GITHUB_OUTPUT"

  upload_artifact:
    needs: github_release
    name: Upload release artifact
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux-armv6
          - os: linux-armv7
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: app-${{ matrix.os }}
          path: ./${{ matrix.os }}
      - run: tree ./${{ matrix.os }}
      - name: List output
        run: echo ${{ needs.github_release.outputs.tag }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ matrix.os }}/app.zip
          asset_name: app-${{ matrix.os }}.zip
          tag: ${{ needs.github_release.outputs.tag }}
          overwrite: true
