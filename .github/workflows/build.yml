on:
  pull_request:
    branches:
      - main

jobs:
  build_docker:
    name: Build Docker image for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux-armv6
            dockerfile: rpizw.Dockerfile
    #          - os: linux-armv7
    #            dockerfile: rpi3.Dockerfile

    steps:
      - uses: actions/checkout@v3
      - name: Verify Changed files
        uses: tj-actions/changed-files@v35
        id: verify-changed-files
        with:
          since_last_remote_commit: true
          files: ${{ matrix.dockerfile }}

      - name: Log in to Docker Hub
        if: steps.verify-changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        if: steps.verify-changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sg-mcu-com-${{ matrix.os }}:latest
  build_released_binary:
    needs: build_docker
    name: Create binary release for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: arm-unknown-linux-gnueabihf
            os: linux-armv6
#          - target: armv7-unknown-linux-gnueabihf
#            os: linux-armv7
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Run Docker image
        run: docker run --rm -i -v $(pwd):/app -w /app ${{ secrets.DOCKERHUB_USERNAME }}/sg-mcu-com-${{ matrix.os }}:latest npm install --production
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            /app
          tag_name: ${{ github.sha }}
          name: ${{ github.sha }}
          body: |
            ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


